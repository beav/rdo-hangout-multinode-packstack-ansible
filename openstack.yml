heat_template_version: 2013-05-23

description: >
  This template sets up the infrastructure for a three-node OpenStack
  deployment.  See README.md in the repository for more information.

parameters:

  image:
    type: string
    default: centos-6-cloud
    description: ID of the image to use for the instance
  key_name:
    type: string
    default: lars
    description: Name of keypair that will be used for access to hosts.
  nameserver:
    type: string
    description: IP address of a nameserver that will used by the api subnet.
    default: 10.5.30.45
  public_net_id:
    type: string
    description: UUID of an "external" network.
    default: eb94d7e2-94be-45ee-bea0-22b9b362f04f

  install_net_id:
    type: string
    description: UUID of install network
    default: 96c2ee02-f8e6-4b07-ae56-cf656d043d61
  install_subnet_id:
    type: string
    description: subnet of install network
    default: a6ebc1d8-d355-4c17-b128-b4c5afec17ba

  controller_flavor:
    type: string
    description: flavor to use for controller
    default: m1.medium
  compute_flavor:
    type: string
    description: flavor to use for compute nodes
    default: m1.medium
  network_flavor:
    type: string
    description: flavor to use for network nodes
    default: m1.medium
  storage_flavor:
    type: string
    description: flavor to use for storage nodes
    default: m1.medium
  all_open_sg:
    type: string
    description: uuid of security group that permits all ports
    default: 7e9ff18f-7f51-43f1-b1b3-6ed519c4c25c

resources:
 
  ########################################################################
  ##
  ## NETWORKS
  ##

  router0:
    type: OS::Neutron::Router

  router0_gw:
    type: OS::Neutron::RouterGateway
    properties:
      router_id: {get_resource: router0}
      network_id: {get_param: public_net_id}

  router0_if_control:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: {get_resource: router0}
      subnet_id: {get_resource: subnet_control}

  net_control:
    type: OS::Neutron::Net
  net_instance:
    type: OS::Neutron::Net
  net_storage:
    type: OS::Neutron::Net

  subnet_control:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.15.0.0/24
      network_id: {get_resource: net_control}
      dns_nameservers: 
      - {get_param: nameserver}

  subnet_storage:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.17.0.0/24
      network_id: {get_resource: net_storage}
      gateway_ip: ""
      dns_nameservers:

  subnet_instance:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.19.0.0/24
      network_id: {get_resource: net_instance}
      gateway_ip: ""
      dns_nameservers:

  ########################################################################
  ##
  ## INSTANCES
  ##

  controller:
    type: OS::Nova::Server
    properties:
      name: controller
      flavor: {get_param: controller_flavor}
      image: {get_param: image}
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: controller_eth0 }
        - port: { get_resource: controller_eth1 }
        - port: { get_resource: controller_eth2 }
  controller_eth0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_control }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_resource: subnet_control }
  controller_eth1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: install_net_id }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_param: install_subnet_id }
  controller_eth2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_storage }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_resource: subnet_storage }
  controller_floating:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: controller_eth0 }

  network:
    type: OS::Nova::Server
    properties:
      name: network
      flavor: {get_param: network_flavor}
      image: {get_param: image}
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: network_eth0 }
        - port: { get_resource: network_eth1 }
        - port: { get_resource: network_eth2 }
  network_eth0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_control }
      fixed_ips:
        - subnet_id: { get_resource: subnet_control }
      security_groups:
        - {get_param: all_open_sg}
  network_eth1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: install_net_id }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_param: install_subnet_id }
  network_eth2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_instance }
      fixed_ips:
        - subnet_id: { get_resource: subnet_instance }
      security_groups:
        - {get_param: all_open_sg}
  network_floating:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: network_eth0 }

  compute0:
    type: OS::Nova::Server
    properties:
      name: compute0
      flavor: {get_param: compute_flavor}
      image: {get_param: image}
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: compute0_eth0 }
        - port: { get_resource: compute0_eth1 }
        - port: { get_resource: compute0_eth2 }
        - port: { get_resource: compute0_eth3 }
  compute0_eth0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_control }
      fixed_ips:
        - subnet_id: { get_resource: subnet_control }
      security_groups:
        - {get_param: all_open_sg}
  compute0_eth1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: install_net_id }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_param: install_subnet_id }
  compute0_eth2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_instance }
      fixed_ips:
        - subnet_id: { get_resource: subnet_instance }
      security_groups:
        - {get_param: all_open_sg}
  compute0_eth3:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_storage }
      fixed_ips:
        - subnet_id: { get_resource: subnet_storage }
      security_groups:
        - {get_param: all_open_sg}

  compute1:
    type: OS::Nova::Server
    properties:
      name: compute1
      flavor: {get_param: compute_flavor}
      image: {get_param: image}
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: compute1_eth0 }
        - port: { get_resource: compute1_eth1 }
        - port: { get_resource: compute1_eth2 }
        - port: { get_resource: compute1_eth3 }
  compute1_eth0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_control }
      fixed_ips:
        - subnet_id: { get_resource: subnet_control }
      security_groups:
        - {get_param: all_open_sg}
  compute1_eth1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: install_net_id }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_param: install_subnet_id }
  compute1_eth2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_instance }
      fixed_ips:
        - subnet_id: { get_resource: subnet_instance }
      security_groups:
        - {get_param: all_open_sg}
  compute1_eth3:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_storage }
      fixed_ips:
        - subnet_id: { get_resource: subnet_storage }
      security_groups:
        - {get_param: all_open_sg}

  storage0:
    type: OS::Nova::Server
    properties:
      name: storage0
      flavor: {get_param: storage_flavor}
      image: {get_param: image}
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: storage0_eth0 }
        - port: { get_resource: storage0_eth1 }
        - port: { get_resource: storage0_eth2 }
  storage0_eth0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_control }
      fixed_ips:
        - subnet_id: { get_resource: subnet_control }
      security_groups:
        - {get_param: all_open_sg}
  storage0_eth1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: install_net_id }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_param: install_subnet_id }
  storage0_eth2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_storage }
      fixed_ips:
        - subnet_id: { get_resource: subnet_storage }
      security_groups:
        - {get_param: all_open_sg}

  storage1:
    type: OS::Nova::Server
    properties:
      name: storage1
      flavor: {get_param: storage_flavor}
      image: {get_param: image}
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: storage1_eth0 }
        - port: { get_resource: storage1_eth1 }
        - port: { get_resource: storage1_eth2 }
  storage1_eth0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_control }
      fixed_ips:
        - subnet_id: { get_resource: subnet_control }
      security_groups:
        - {get_param: all_open_sg}
  storage1_eth1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: install_net_id }
      security_groups:
        - {get_param: all_open_sg}
      fixed_ips:
        - subnet_id: { get_param: install_subnet_id }
  storage1_eth2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_storage }
      fixed_ips:
        - subnet_id: { get_resource: subnet_storage }
      security_groups:
        - {get_param: all_open_sg}

  ########################################################################
  ##
  ## VOLUMES
  ##

  vol_brick0:
    type: OS::Cinder::Volume
    properties:
      size: 10
  vol_brick1:
    type: OS::Cinder::Volume
    properties:
      size: 10

  vol_brick0_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: {get_resource: storage0}
      volume_id: {get_resource: vol_brick0}
      mountpoint: /dev/vdc
  vol_brick1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: {get_resource: storage1}
      volume_id: {get_resource: vol_brick1}
      mountpoint: /dev/vdc


outputs:

  controller_external_ip:
    description: controller external ip address
    value: {get_attr: [controller_floating, floating_ip_address]}
  network_external_ip:
    description: network host external ip address
    value: {get_attr: [network_floating, floating_ip_address]}

  controller_internal_ip:
    value: {get_attr: [controller_eth0, fixed_ips]}
    description: controller internal ip address
  network_internal_ip:
    value: {get_attr: [network_eth0, fixed_ips]}
    description: network host internal ip address
  compute0_internal_ip:
    value: {get_attr: [compute0_eth0, fixed_ips]}
    description: compute0 internal ip address
  compute1_internal_ip:
    value: {get_attr: [compute1_eth0, fixed_ips]}
    description: compute1 internal ip address
  storage0_internal_ip:
    value: {get_attr: [storage0_eth0, fixed_ips]}
    description: storage0 internal ip address
  storage1_internal_ip:
    value: {get_attr: [storage1_eth0, fixed_ips]}
    description: storage1 internal ip address
  storage0_storage_ip:
    value: {get_attr: [storage0_eth2, fixed_ips]}
    description: storage0 storage ip address
  storage1_storage_ip:
    value: {get_attr: [storage1_eth2, fixed_ips]}
    description: storage1 storage ip address

